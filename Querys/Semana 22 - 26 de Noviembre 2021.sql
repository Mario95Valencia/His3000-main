ALTER PROCEDURE sp_FichaMedico  
@CodigoMedico INT  
AS  
select MED_CODIGO, CONCAT(MED_APELLIDO_PATERNO, ' ' , MED_APELLIDO_MATERNO,  ' ' ,MED_NOMBRE1,  ' ' ,MED_NOMBRE2) as DATOS  
, MED_RUC AS RUC, MED_FECHA_NACIMIENTO AS FECHA_NACIMIENTO, MED_GENERO AS GENERO, MED_EMAIL AS MAIL,  
MED_FECHA AS FechaIngreso, MED_DIRECCION as DireccionConsultorio, EM.ESP_NOMBRE AS Especialidad,  
MED_TELEFONO_CASA AS TelefonoCasa, MED_TELEFONO_CONSULTORIO AS TelefonoConsultorio, MED_TELEFONO_CELULAR AS TelefonoCelular,  
TIM_NOMBRE AS TipoMedico, TIH_NOMBRE AS TipoHonorario, BAN_NOMBRE AS BANCO, MED_NUM_CUENTA AS CuentaMedico,  
MED_TIPO_CUENTA AS Tipo_Cuenta, MED_CUENTA_CONTABLE AS CuentaContable, MED_AUTORIZACION_SRI AS AutorizacionSri,  
MED_VALIDEZ_AUTORIZACION AS ValidezAutorizacion, MED_FACTURA_INICIAL AS FacturaInicial, MED_FACTURA_FINAL AS FacturaFinal,  
RET_DESCRIPCION AS Retencion, RET_PORCENTAJE AS Porcentaje, EC.ESC_NOMBRE AS CIVIL, MED_DIRECCION_CONSULTORIO AS OBSERVACION
from MEDICOS M   
INNER JOIN ESPECIALIDADES_MEDICAS EM ON M.ESP_CODIGO = EM.ESP_CODIGO  
INNER JOIN TIPO_MEDICO TE ON M.TIM_CODIGO = TE.TIM_CODIGO  
INNER JOIN TIPO_HONORARIO TH ON M.TIH_CODIGO = TH.TIH_CODIGO  
INNER JOIN BANCOS B ON M.BAN_CODIGO = B.BAN_CODIGO  
INNER JOIN RETENCIONES_FUENTE RF ON M.RET_CODIGO = RF.RET_CODIGO  
INNER JOIN ESTADO_CIVIL EC ON M.ESC_CODIGO = EC.ESC_CODIGO

---------------------------------------------------------------------

CREATE PROCEDURE sp_HonorarioValorAnticipo
@numrec NVARCHAR(10)
AS
SELECT monto FROM Sic3000..Anticipo WHERE numrec = @numrec
GO

---------------------------------------------------------------------
CREATE TABLE CONTROL_DESPACHO
(CD_CODIGO BIGINT IDENTITY(1,1) NOT NULL,
ID_USUARIO SMALLINT,
CODPRO NVARCHAR(50),
PED_CODIGO BIGINT,
CD_OBSERVACION NVARCHAR(500),
CD_FECHA DATETIME DEFAULT GETDATE(),
CD_ESTADO BIT)
----------------------------------------------------------------------
alter PROCEDURE sp_DespachoProductos  
@desde datetime,  
@hasta datetime,
@filtro nvarchar(500) 
AS  
SELECT 
ISNULL((SELECT CP.CD_ESTADO FROM CONTROL_DESPACHO CP WHERE CP.PED_CODIGO = P.PED_CODIGO AND CP.CODPRO = PD.PRO_CODIGO), 'false') AS 'despachado' ,
P.PED_CODIGO AS 'CODIGO PEDIDO', PD.PDD_CANTIDAD AS CANTIDAD,  
P.PED_FECHA AS FECHA, CONVERT(varchar,PED_FECHA,8) AS HORA,  
PA.PAC_APELLIDO_PATERNO + ' ' + PA.PAC_APELLIDO_MATERNO + ' ' + PA.PAC_NOMBRE1 + ' ' + PA.PAC_NOMBRE2 AS PACIENTE,  
H.hab_Numero AS HAB, NP.NIV_NOMBRE AS PISO, PA.PAC_HISTORIA_CLINICA AS 'HIST. CLINICA', A.ATE_NUMERO_ATENCION AS 'N? ATENCION',  
U.APELLIDOS + ' ' + U.NOMBRES AS 'PEDIDO POR',   
ISNULL((SELECT U1.APELLIDOS + ' ' + U1.NOMBRES FROM CONTROL_DESPACHO CD 
INNER JOIN USUARIOS U1 ON CD.ID_USUARIO = U1.ID_USUARIO
WHERE CP.PRO_CODIGO = CD.CODPRO AND CP.Codigo_Pedido = CD.PED_CODIGO ), '') AS 'DESPACHADO POR',  
ISNULL((SELECT CP.CD_FECHA FROM CONTROL_DESPACHO CP WHERE CP.PED_CODIGO = P.PED_CODIGO AND CP.CODPRO = PD.PRO_CODIGO), '') AS 'FECHA DESPACHO',  
ISNULL((SELECT CP.CD_OBSERVACION FROM CONTROL_DESPACHO CP WHERE CP.PED_CODIGO = P.PED_CODIGO AND CP.CODPRO = PD.PRO_CODIGO), '') AS 'OBSERVACION',
CP.PRO_CODIGO
FROM PEDIDOS P  
INNER JOIN PEDIDOS_DETALLE PD ON P.PED_CODIGO = PD.PED_CODIGO  
INNER JOIN USUARIOS U ON P.ID_USUARIO = U.ID_USUARIO  
INNER JOIN CUENTAS_PACIENTES CP ON P.PED_CODIGO = CP.Codigo_Pedido  
INNER JOIN ATENCIONES A ON CP.ATE_CODIGO = A.ATE_CODIGO  
INNER JOIN PACIENTES PA ON A.PAC_CODIGO = PA.PAC_CODIGO  
INNER JOIN HABITACIONES H ON A.HAB_CODIGO = H.hab_Codigo  
INNER JOIN NIVEL_PISO NP ON H.NIV_CODIGO = NP.NIV_CODIGO   
----------------------------------------------------------
alter PROCEDURE sp_Pedidos_InsertDespacho   
@ped_codigo bigint,  
@id_usuario smallint,  
@observacion nvarchar(500),  
@despachado int,
@fecha datetime
AS  
if(@despachado = 0)  
BEGIN  
 INSERT INTO CONTROL_DESPACHO(ID_USUARIO, PED_CODIGO, CD_OBSERVACION, CD_FECHA, CD_ESTADO)   
 VALUES (@id_usuario, @ped_codigo, @observacion, @fecha, 1)  
END  
ELSE  
BEGIN  
 INSERT INTO CONTROL_DESPACHO(ID_USUARIO, PED_CODIGO, CD_OBSERVACION, CD_FECHA, CD_ESTADO)   
 VALUES (@id_usuario, @ped_codigo, @observacion, @fecha, 0)  
END  
-----------------------------------------------
alter PROCEDURE sp_VerPisos
AS
SELECT * FROM NIVEL_PISO order by 2 asc
GO
----------------------------------------------------
ALTER PROCEDURE sp_VerHabitaciones
@niv_piso smallint
AS
IF(@niv_piso = 0)
BEGIN
	SELECT * FROM HABITACIONES WHERE hab_Activo = 1 ORDER BY hab_Numero ASC
END
ELSE
BEGIN
	SELECT * FROM HABITACIONES WHERE NIV_CODIGO = @niv_piso AND hab_Activo = 1 ORDER BY hab_Numero ASC
END
GO

-----------------------------------------------------------