--cartera---- dentro del sic
-- CREATE VIEW vista_VERSOBRANTES
-- AS
-- SELECT numdoc AS 'NÂº DOCUMENTO', C.nomcli AS 'CLIENTE', tipo AS TIPO, debe AS DEBE, 
-- haber AS HABER, CONVERT(FLOAT, cxc.saldo) AS SALDO, fecha AS FECHA,
-- F.despag AS 'FORMA PAGO', CL.desclas AS CLASIFICACION
-- FROM CxC cxc
-- INNER JOIN Cliente C ON cxc.codcli = C.codcli
-- INNER JOIN Forma_Pago F ON cxc.forpag = F.forpag
-- INNER JOIN Clasificacion CL ON cxc.claspag = CL.codclas
-- GO
----------------------------------------------------------

-- -- alter procedure sp_mostrarcongregaciones  
-- -- @tipo int  
-- -- as  
-- -- if(@tipo =0)  
-- -- begin  
-- -- select ase_nombre as congregacion, ase_ruc as ruc, 
-- -- ase_direccion as direccion, ase_ciudad as ciudad, ase_telefono as telefono
-- -- from his3000..aseguradoras_empresas where te_codigo = 6  
-- -- end  
-- -- else  
-- -- begin  
-- -- select ase_nombre as aseguradora, ase_ruc as ruc,   
-- -- ase_direccion as direccion, ase_ciudad as ciudad, ase_telefono as telefono  
-- -- from his3000..aseguradoras_empresas where te_codigo = 1  
-- -- end  

-- ------------------------------------------------------

-- CREATE TABLE MEDICOS_APC(
-- MAPC_CODIGO BIGINT IDENTITY(1,1)NOT NULL,
-- MED_CODIGO BIGINT,
-- MAPC_VALOR_APC FLOAT)
-- ----------------------------------------------------------

-- CREATE PROCEDURE sp_MedicoAPC
-- @med_codigo bigint
-- AS
-- SELECT MAPC_VALOR_APC FROM MEDICOS_APC WHERE MED_CODIGO = @med_codigo
-- GO

----------------------------------------------------------
alter PROCEDURE sp_QuirofanoProductoSic 
@filtro nvarchar(100)
AS  
SELECT P.codpro AS CODIGO, P.despro AS PRODUCTO, B.existe AS STOCK, QP.QP_GRUPO AS GRUPO, P.preven  
FROM QUIROFANO_PRODUCTOS QP  
INNER JOIN Sic3000..Producto P ON QP.CODPRO = P.codpro  
INNER JOIN Sic3000..Bodega B ON P.codpro = B.codpro   
WHERE B.codbod = 12 and P.despro like '%'+ @filtro + '%'
ORDER BY 2 ASC  

------------------------------------------------------------

ALTER PROCEDURE [dbo].[sp_QuirofanoSoloProcedimientos]  
AS  
SELECT QPP.PCI_CODIGO,  C.PCI_DESCRIPCION AS Procedimiento  
FROM QUIROFANO_PROCE_PRODU QPP  
INNER JOIN PROCEDIMIENTOS_CIRUGIA C ON QPP.PCI_CODIGO = C.PCI_CODIGO  
WHERE QPP.PAC_CODIGO IS NULL  AND C.PCI_ESTADO = 1
GROUP BY C.PCI_DESCRIPCION, QPP.PCI_CODIGO 

------------------------------------------------------

ESTE YA ESTA EN LA ALIANZA
-- INSERT INTO PARAMETROS VALUES(19, 1, 'VER PACIENTES', 'TODOS LOS PACIENTES', 1)

-- INSERT INTO PARAMETROS_DETALLE VALUES (30, 19, 'AUDITORIA', NULL, 'VER TODOS LOS PACIENTES AUDITORIA', 1)

-- CREATE PROCEDURE sp_ParametroAuditoria
-- AS
-- SELECT PAD_ACTIVO FROM PARAMETROS_DETALLE WHERE PAD_CODIGO = 30
-- GO

--------------------------------------------------------
alter PROCEDURE sp_CambiosHistorialAreas  
@ate_codigo bigint,  
@hah_codigo bigint,
@had_codigo bigint
AS  
DECLARE @tip_codigo int  
DECLARE @area varchar(500)  
  
SET @tip_codigo = (SELECT TIP_CODIGO FROM ATENCIONES WHERE ATE_CODIGO = @ate_codigo)  
SET @area = (SELECT NIV_NOMBRE FROM NIVEL_PISO WHERE NIV_CODIGO = (SELECT NIV_CODIGO FROM HABITACIONES WHERE hab_Codigo = (SELECT HAB_CODIGO FROM HABITACIONES_HISTORIAL WHERE ATE_CODIGO = @ate_codigo and HAH_CODIGO = @hah_codigo)))  
  
  
UPDATE HABITACIONES_HISTORIAL SET HAH_REGISTRO_ANTERIOR = @tip_codigo, HAD_AREA = @area WHERE ATE_CODIGO = @ate_codigo AND HAH_CODIGO = @hah_codigo 

UPDATE HABITACIONES_DETALLE SET HAD_REGISTRO_ANTERIOR = @tip_codigo WHERE ATE_CODIGO = @ate_codigo AND HAD_CODIGO = @had_codigo  


-------------------------------------------------------------------------------------------------
USE [Sic3000]
GO

/****** Object:  View [dbo].[EstadoCuentaPaciente]    Script Date: 03/11/2021 12:21:46 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[EstadoCuentaPaciente]
AS
SELECT EC.fecha, EC.numfac, EC.numdoc, FDA.Nombres, EC.obs, FP.forpag, EC.iddoc
, FP.despag, C.codclas, C.desclas, EC.saldo, EC.debe, EC.haber, EC.fecha2, FDA.RucCedula
FROM EstadoCuentas EC
LEFT JOIN FacturaDatosAdicionales FDA ON EC.numfac = FDA.Numdoc
--INNER JOIN Cliente CL ON FDA.RucCedula = CL.ruccli
INNER JOIN Clasificacion C ON EC.claspag = C.codclas
INNER JOIN Forma_Pago FP ON EC.forpag = FP.forpag
GO
--------------------------------------------------------------

USE [Sic3000]
GO

/****** Object:  View [dbo].[ECHONORARIOPACIENTES]    Script Date: 03/11/2021 13:58:17 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

ALTER VIEW [dbo].[ECHONORARIOPACIENTES]
as
SELECT  EC.fecha, EC.numfac, EC.numdoc, HM.PACIENTE, EC.obs, FP.forpag, EC.iddoc
, FP.despag, C.codclas, C.desclas, EC.saldo, EC.debe, EC.haber, EC.fecha2, P.PAC_IDENTIFICACION
FROM EstadoCuentas EC
INNER JOIN HonorariosMedico HM ON EC.numfac = CONVERT(NVARCHAR,HM.CODIGO)
INNER JOIN Clasificacion C ON EC.claspag = C.codclas
INNER JOIN Forma_Pago FP ON EC.forpag = FP.forpag
INNER JOIN His3000..PACIENTES P ON HM.PAC_HISTORIA_CLINICA = P.PAC_HISTORIA_CLINICA
GO


-----------------------------------------------------------------------------------------
---SOLO PARA ALIANZA
ALTER PROCEDURE [dbo].[sp_ListaPedidoPaciente]    
(    
    
 @codigoArea AS INT,    
 @codigoAtencion AS INT    
    
)    
AS    
BEGIN     
    
--SELECT c.Codigo_Pedido PED_CODIGO, c.RUB_CODIGO PEA_CODIGO, c.PRO_CODIGO PEE_CODIGO, c.CUE_DETALLE PED_DESCRIPCION, c.CUE_FECHA PED_FECHA,    
--u.ID_USUARIO, u.APELLIDOS + ' ' + u.NOMBRES USUARIO, p.PAC_HISTORIA_CLINICA HISTORIA_CLINICA, a.ATE_CODIGO,    
--p.PAC_APELLIDO_PATERNO + ' ' + p.PAC_APELLIDO_MATERNO + ' ' + p.PAC_NOMBRE1 + ' ' + p.PAC_NOMBRE2 PACIENTE, c.CUE_CODIGO PDD_CODIGO,    
--c.PRO_CODIGO, c.CUE_DETALLE PRO_DESCRIPCION, c.CUE_CANTIDAD, CONCAT(m.MED_APELLIDO_PATERNO, +' '+ m.MED_NOMBRE1) MEDICO,  
--ISNULL((SELECT PDD.DevDetCantidad  
--FROM PEDIDO_DEVOLUCION PD  
--INNER JOIN PEDIDO_DEVOLUCION_DETALLE PDD ON PD.DevCodigo = PDD.DevCodigo  
--WHERE C.Codigo_Pedido = PD.Ped_Codigo AND C.PRO_CODIGO = PDD.PRO_CODIGO), 0) AS 'CANT. DEV'  
--FROM ATENCIONES a, PACIENTES p, CUENTAS_PACIENTES c, USUARIOS u, MEDICOS m    
--WHERE a.PAC_CODIGO = p.PAC_CODIGO AND a.ATE_CODIGO = c.ATE_CODIGO AND c.ID_USUARIO = u.ID_USUARIO AND    
--c.MED_CODIGO = m.MED_CODIGO AND c.RUB_CODIGO = @codigoArea AND c.ATE_CODIGO = @codigoAtencion    


SELECT CP.Codigo_Pedido PED_CODIGO, CP.RUB_CODIGO PEA_CODIGO, CP.PRO_CODIGO PEE_CODIGO, CP.CUE_DETALLE PED_DESCRIPCION, CP.CUE_FECHA PED_FECHA,    
u.ID_USUARIO, u.APELLIDOS + ' ' + u.NOMBRES USUARIO, p.PAC_HISTORIA_CLINICA HISTORIA_CLINICA, a.ATE_CODIGO,    
p.PAC_APELLIDO_PATERNO + ' ' + p.PAC_APELLIDO_MATERNO + ' ' + p.PAC_NOMBRE1 + ' ' + p.PAC_NOMBRE2 PACIENTE, CP.CUE_CODIGO PDD_CODIGO,    
CP.PRO_CODIGO, CP.CUE_DETALLE PRO_DESCRIPCION, CP.CUE_CANTIDAD, CONCAT(m.MED_APELLIDO_PATERNO, +' '+ m.MED_NOMBRE1) MEDICO, 
ISNULL((SELECT PDD.DevDetCantidad FROM PEDIDO_DEVOLUCION_DETALLE PDD 
WHERE PD.DevCodigo = PDD.DevCodigo AND CP.PRO_CODIGO = PDD.PRO_CODIGO), 0) AS 'CANT. DEV'
FROM CUENTAS_PACIENTES CP
INNER JOIN ATENCIONES A ON CP.ATE_CODIGO = A.ATE_CODIGO
INNER JOIN PACIENTES P ON A.PAC_CODIGO = P.PAC_CODIGO
INNER JOIN PEDIDOS PE ON CP.Codigo_Pedido = PE.PED_CODIGO
LEFT JOIN PEDIDO_DEVOLUCION PD ON PE.PED_CODIGO = PD.Ped_Codigo
INNER JOIN USUARIOS U ON CP.ID_USUARIO = U.ID_USUARIO
INNER JOIN MEDICOS M ON CP.MED_CODIGO = M.MED_CODIGO
WHERE CP.RUB_CODIGO = @codigoArea AND CP.ATE_CODIGO = @codigoAtencion   
order by CP.PED_CODIGO, CP.CUE_FECHA desc    
    
END  


ALTER PROCEDURE [dbo].[sp_ListaPedidoPacienteTodosRubros]    
(    
 @codigoAtencion AS INT    
    
)    
AS    
BEGIN     
    
 --SELECT c.Codigo_Pedido PED_CODIGO, c.RUB_CODIGO PEA_CODIGO, c.PRO_CODIGO PEE_CODIGO, c.CUE_DETALLE PED_DESCRIPCION, c.CUE_FECHA PED_FECHA,    
 --c.CUE_CANTIDAD, u.ID_USUARIO, u.APELLIDOS + ' ' + u.NOMBRES USUARIO, p.PAC_HISTORIA_CLINICA HISTORIA_CLINICA, a.ATE_CODIGO,    
 --p.PAC_APELLIDO_PATERNO + ' ' + p.PAC_APELLIDO_MATERNO + ' ' + p.PAC_NOMBRE1 + ' ' + p.PAC_NOMBRE2 PACIENTE, c.CUE_CODIGO PDD_CODIGO,    
 --c.PRO_CODIGO, c.CUE_DETALLE PRO_DESCRIPCION, CONCAT(m.MED_APELLIDO_PATERNO, +' '+ m.MED_NOMBRE1) MEDICO, 
 --ISNULL((SELECT PDD.DevDetCantidad  
 --FROM PEDIDO_DEVOLUCION PD  
 --INNER JOIN PEDIDO_DEVOLUCION_DETALLE PDD ON PD.DevCodigo = PDD.DevCodigo  
 --WHERE C.Codigo_Pedido = PD.Ped_Codigo AND C.PRO_CODIGO = PDD.PRO_CODIGO), 0) AS 'CANT. DEV'  
 --FROM ATENCIONES a, PACIENTES p, CUENTAS_PACIENTES c, USUARIOS u, MEDICOS m, PEDIDOS PE, PEDIDO_DEVOLUCION PD
 --WHERE a.PAC_CODIGO = p.PAC_CODIGO AND a.ATE_CODIGO = c.ATE_CODIGO AND c.ID_USUARIO = u.ID_USUARIO AND    
 --c.MED_CODIGO = m.MED_CODIGO  AND C.Codigo_Pedido = PE.PED_CODIGO
 --AND C.ATE_CODIGO = @codigoAtencion  
 --order by C.PED_CODIGO, C.CUE_FECHA desc 

SELECT CP.Codigo_Pedido PED_CODIGO, CP.RUB_CODIGO PEA_CODIGO, CP.PRO_CODIGO PEE_CODIGO, CP.CUE_DETALLE PED_DESCRIPCION, CP.CUE_FECHA PED_FECHA,    
 CP.CUE_CANTIDAD, u.ID_USUARIO, u.APELLIDOS + ' ' + u.NOMBRES USUARIO, p.PAC_HISTORIA_CLINICA HISTORIA_CLINICA, a.ATE_CODIGO,    
 p.PAC_APELLIDO_PATERNO + ' ' + p.PAC_APELLIDO_MATERNO + ' ' + p.PAC_NOMBRE1 + ' ' + p.PAC_NOMBRE2 PACIENTE, CP.CUE_CODIGO PDD_CODIGO,    
 CP.PRO_CODIGO, CP.CUE_DETALLE PRO_DESCRIPCION, CONCAT(m.MED_APELLIDO_PATERNO, +' '+ m.MED_NOMBRE1) MEDICO,
ISNULL((SELECT PDD.DevDetCantidad FROM PEDIDO_DEVOLUCION_DETALLE PDD 
WHERE PD.DevCodigo = PDD.DevCodigo AND CP.PRO_CODIGO = PDD.PRO_CODIGO), 0) AS 'CANT. DEV'
FROM CUENTAS_PACIENTES CP
INNER JOIN ATENCIONES A ON CP.ATE_CODIGO = A.ATE_CODIGO
INNER JOIN PACIENTES P ON A.PAC_CODIGO = P.PAC_CODIGO
INNER JOIN PEDIDOS PE ON CP.Codigo_Pedido = PE.PED_CODIGO
LEFT JOIN PEDIDO_DEVOLUCION PD ON PE.PED_CODIGO = PD.Ped_Codigo
INNER JOIN USUARIOS U ON CP.ID_USUARIO = U.ID_USUARIO
INNER JOIN MEDICOS M ON CP.MED_CODIGO = M.MED_CODIGO
WHERE CP.ATE_CODIGO = @codigoAtencion  
order by CP.PED_CODIGO, CP.CUE_FECHA desc    
    
END
--..............................................
CREATE PROCEDURE sp_HonorarioIndividual
@hom_codigo bigint
AS
SELECT dbo.PACIENTES.PAC_HISTORIA_CLINICA as HC, dbo.ATENCIONES.ATE_CODIGO, 
concat(dbo.PACIENTES.PAC_APELLIDO_PATERNO, ' ', dbo.PACIENTES.PAC_APELLIDO_MATERNO, ' ', dbo.PACIENTES.PAC_NOMBRE1, ' ', dbo.PACIENTES.PAC_NOMBRE2) as paciente, 
dbo.ATENCIONES.ATE_FACTURA_PACIENTE, dbo.MEDICOS.MED_CODIGO, 
CONCAT(dbo.MEDICOS.MED_APELLIDO_PATERNO, ' ', dbo.MEDICOS.MED_APELLIDO_MATERNO, ' ', dbo.MEDICOS.MED_NOMBRE1, ' ',dbo.MEDICOS.MED_NOMBRE2) AS MEDICO,
dbo.HONORARIOS_MEDICOS.HOM_CODIGO, dbo.HONORARIOS_MEDICOS.HOM_FACTURA_FECHA AS FECHA_FACTURA_MED, 
dbo.HONORARIOS_MEDICOS.HOM_FACTURA_MEDICO as FACTURA,dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.AUTORIZACION_SRI AS AUTORIZACION,
dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.FEC_CAD_FACTURA AS CADUCIDAD, 
dbo.HONORARIOS_MEDICOS.HOM_VALOR_NETO as VALOR, dbo.HONORARIOS_MEDICOS.HOM_COMISION_CLINICA AS COMISION,
dbo.HONORARIOS_MEDICOS.HOM_APORTE_LLAMADA AS APORTE, dbo.HONORARIOS_MEDICOS.HOM_RETENCION AS RETENCION, 
dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.HON_CUBIERTO AS VALOR_CUBIERTO, dbo.HONORARIOS_MEDICOS.HOM_RECORTE as RECORTE, 
dbo.RETENCIONES_FUENTE.RET_REFERENCIA as COD_RET, dbo.RETENCIONES_FUENTE.COD_CUE AS CTA_RETENCION ,
CASE
    WHEN dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.HON_FUERA = 1 
	THEN(select PAD_VALOR from PARAMETROS_DETALLE where PAD_NOMBRE like 'HONORARIOS POR FUERA')
    WHEN dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.HON_FUERA = 'true' 
	THEN(select PAD_VALOR from PARAMETROS_DETALLE where PAD_NOMBRE like 'HONORARIOS POR FUERA')
    ELSE(select PAD_VALOR from PARAMETROS_DETALLE where PAD_NOMBRE like 'HONORARIOS POR DENTRO')
    END AS CTA_HONORARIOS, 
dbo.MEDICOS.MED_CUENTA_CONTABLE AS CTA_MEDICO,(select PAD_VALOR from PARAMETROS_DETALLE where PAD_NOMBRE like 'APORTE LLAMADAS') AS CTA_APORTE,
(select PAD_VALOR from PARAMETROS_DETALLE where PAD_NOMBRE like 'COMISION') AS CTA_COMISION,
dbo.HONORARIOS_MEDICOS.HOM_POR_PAGAR AS A_PAGAR, ISNULL(dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.GENERADO_ASIENTO, 0) AS GENERADO,
(select concat(u.NOMBRES,' ',u.APELLIDOS) as USUARIO from USUARIOS u where ID_USUARIO=dbo.HONORARIOS_MEDICOS.ID_USUARIO) AS USUARIO,  
dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.HON_FUERA AS HON_X_FUERA,'SEGUROS' = CONVERT(BIT, 
CASE WHEN (SELECT C.codclas FROM Sic3000..Clasificacion C INNER JOIN Sic3000..Forma_Pago FP ON C.codclas = FP.claspag 
WHERE FORMA_PAGO.forpag = FP.forpag) = 7 
THEN 1 else 0 end), dbo.FORMA_PAGO.forpag, 'FORMA PAGO' = (SELECT despag FROM Sic3000..Forma_Pago 
WHERE Sic3000..Forma_Pago.forpag = dbo.FORMA_PAGO.forpag), dbo.FORMA_PAGO.FOR_DESCRIPCION as 'CORRIENTE / DIFERIDO'
FROM dbo.HONORARIOS_MEDICOS_DATOSADICIONALES 
RIGHT OUTER JOIN dbo.HONORARIOS_MEDICOS
INNER JOIN dbo.ATENCIONES ON dbo.HONORARIOS_MEDICOS.ATE_CODIGO = dbo.ATENCIONES.ATE_CODIGO 
INNER JOIN dbo.PACIENTES ON dbo.ATENCIONES.PAC_CODIGO = dbo.PACIENTES.PAC_CODIGO 
LEFT OUTER JOIN dbo.FORMA_PAGO ON dbo.HONORARIOS_MEDICOS.FOR_CODIGO = dbo.FORMA_PAGO.FOR_CODIGO ON
dbo.HONORARIOS_MEDICOS_DATOSADICIONALES.HOM_CODIGO = dbo.HONORARIOS_MEDICOS.HOM_CODIGO 
LEFT OUTER JOIN dbo.RETENCIONES_FUENTE 
INNER JOIN dbo.MEDICOS ON dbo.RETENCIONES_FUENTE.RET_CODIGO = dbo.MEDICOS.RET_CODIGO ON dbo.HONORARIOS_MEDICOS.MED_CODIGO = dbo.MEDICOS.MED_CODIGO
where dbo.HONORARIOS_MEDICOS.HOM_CODIGO = @hom_codigo
GO---..................................................................


CREATE PROCEDURE sp_ValidaHonorariosGenerados
@HOM_CODIGO bigint
AS
SELECT GENERADO_ASIENTO FROM HONORARIOS_MEDICOS_DATOSADICIONALES WHERE HOM_CODIGO = @HOM_CODIGO
GO
--.................................................................................

 
  